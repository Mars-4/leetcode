class Solution1 {
public:
    int maxProduct(vector<int>& nums) {
        int val = 1;
        int maxVal = INT_MIN;

        int mval = 1;
        int minVal = INT_MAX;

        int last = 1;
        for(int i : nums)
        {
            last = val;
            val = max(max(mval * i, val * i), i);
            maxVal = max(val, maxVal);
            
            mval = min(min(mval * i, last * i), i);
        }
        
        return maxVal;
    }
};

class Solution2 {
public:
    int getMaxLen(vector<int>& nums) {
        int positive = 0;
        int negetive = 0;
        int ans = 0;

        for(int i : nums)
        {
            if(i != 0)
            {
                positive++;
                negetive = negetive > 0 ? negetive + 1 : 0;
                
                if(i < 0)
                {
                    swap(positive, negetive);
                }
            }
            else
            {
                positive = negetive = 0;
            }
            ans = max(ans, positive);
        }
        return ans;
    }
};
