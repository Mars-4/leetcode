/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;

    Node() {}

    Node(int _val) {
        val = _val;
        left = NULL;
        right = NULL;
    }

    Node(int _val, Node* _left, Node* _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
public:
    Node* begin = NULL;
    Node* end = NULL;

    Node* last = NULL;
    bool flagL = 1;

    Node* treeToDoublyList(Node* root) {
        if(!root)
        {
            return NULL;
        }

        begin = end = root;
        loop(root);

        begin->left = end;
        end->right = begin;

        return begin;
    }

    void loop(Node* node)
    {
        if(node->left)
        {
            if(flagL)
            {
                begin = node->left;
            }
        
            loop(node->left);
        }
        
        if(last)
        {
            last->right = node;
            node->left = last;
        }
        last = node;
        end = node;

        if(node->right)
        {
            flagL = 0;
            loop(node->right);
        }
    }
};
